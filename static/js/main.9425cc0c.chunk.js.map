{"version":3,"sources":["components/Navbar.tsx","App.tsx","components/HomePage.tsx","components/NotFoundPage.tsx","utils/helpers.ts","utils/searchHelper.ts","components/SearchLink.tsx","components/PeopleFilters.tsx","components/Loader/Loader.tsx","components/PersonLink.tsx","components/PeopleRow.tsx","components/PeopleTable.tsx","api.ts","components/PeoplePage.tsx","Root.tsx","index.tsx"],"names":["Navbar","isActiveClass","isActive","classNames","className","role","to","App","HomePage","NotFoundPage","filterSex","title","sex","filterCenturies","getSearchWith","currentParams","paramsToUpdate","newParams","URLSearchParams","toString","Object","entries","forEach","key","value","delete","Array","isArray","part","append","set","SearchLink","children","params","props","useSearchParams","searchParams","search","PeopleFilters","query","filterBySex","centuriesOption","setSearchParams","map","type","placeholder","onChange","event","target","century","includes","centuries","filter","c","length","Loader","PersonLink","person","pathname","slug","name","PeopleRow","cn","born","died","mother","motherName","father","fatherName","PeopleTable","people","currentSort","get","currentOrder","sortBy","sort","order","API_URL","wait","delay","Promise","resolve","setTimeout","getPeople","then","fetch","response","json","PeoplePage","useState","setPeople","isLoading","setIsLoading","isError","setIsError","getAll","sortByUrl","sortByOrder","personSlug","useParams","filteredPeople","useEffect","fetchData","getPeopleFromServer","peopleFromServer","find","p","updatedSearchParams","toLowerCase","alivePeriod","Math","ceil","a","b","localeCompare","reverse","Root","path","element","index","replace","container","document","getElementById","createRoot","render"],"mappings":"kQAIaA,EAAS,WACpB,IAAMC,EAAgB,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAAyCC,IAAW,cAAe,CACvF,8BAA+BD,GADX,EAItB,OACE,qBACE,UAAQ,MACRE,UAAU,iCACVC,KAAK,aACL,aAAW,kBAJb,SAME,qBAAKD,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,IAAD,CAASE,GAAG,IAAIF,UAAWH,EAA3B,kBAIA,cAAC,IAAD,CACE,eAAa,OACbG,UAAWH,EACXK,GAAG,UAHL,0BAWT,EC5BYC,G,MAAM,WACjB,OACE,sBAAK,UAAQ,MAAb,UACE,cAAC,EAAD,IAEA,cAAC,IAAD,MAGL,GCbYC,EAAW,WACtB,OACE,sBAAMJ,UAAU,UAAhB,SACE,oBAAIA,UAAU,QAAd,wBAGL,ECNYK,EAAe,kBAC1B,oBAAIL,UAAU,QAAd,2BAD0B,E,2CCAfM,EAAY,CACvB,CAAEC,MAAO,MAAOC,IAAK,MACrB,CAAED,MAAO,OAAQC,IAAK,KACtB,CAAED,MAAO,SAAUC,IAAK,MAGbC,EAAkB,CAAC,KAAM,KAAM,KAAM,KAAM,MCEjD,SAASC,EACdC,EACAC,GAGA,IAAMC,EAAY,IAAIC,gBACpBH,EAAcI,YA+BhB,OAjBAC,OAAOC,QAAQL,GACZM,SAAQ,YAAmB,IAAD,mBAAhBC,EAAgB,KAAXC,EAAW,KACX,OAAVA,EACFP,EAAUQ,OAAOF,GACRG,MAAMC,QAAQH,IAEvBP,EAAUQ,OAAOF,GAEjBC,EAAMF,SAAQ,SAAAM,GACZX,EAAUY,OAAON,EAAKK,EACvB,KAEDX,EAAUa,IAAIP,EAAKC,EAEtB,IAGIP,EAAUE,UAClB,C,oCCvCYY,EAA8B,SAAC,GAIrC,IAHLC,EAGI,EAHJA,SACAC,EAEI,EAFJA,OACGC,EACC,iBACJ,EAAuBC,cAAhBC,EAAP,oBAEA,OACE,cAAC,IAAD,yBACE9B,GAAI,CACF+B,OAAQvB,EAAcsB,EAAcH,KAElCC,GAJN,aAMGF,IAGN,ECXYM,EAAiC,SAAC,GAIxC,IAHLC,EAGI,EAHJA,MACAC,EAEI,EAFJA,YACAC,EACI,EADJA,gBAEA,EAAwCN,cAAxC,mBAAOC,EAAP,KAAqBM,EAArB,KAQA,OACE,sBAAKtC,UAAU,QAAf,UACE,mBAAGA,UAAU,gBAAb,qBAEA,mBAAGA,UAAU,aAAa,UAAQ,YAAlC,SACGM,EAAUiC,KAAI,gBACXhC,EADW,EACXA,MAAOC,EADI,EACJA,IADI,OAGb,cAAC,EAAD,CAEEqB,OAAQ,CAAErB,OACVR,UAAWD,IAAW,CACpB,YAAaqC,IAAgB5B,IAJjC,SAOGD,GANIA,EAJM,MAejB,qBAAKP,UAAU,cAAf,SACE,oBAAGA,UAAU,yBAAb,UACE,uBACE,UAAQ,aACRwC,KAAK,SACLxC,UAAU,QACVyC,YAAY,SACZrB,MAAOe,EACPO,SAlCgB,SAACC,GACzB,IAAMd,EAASnB,EAAcsB,EAAc,CAAEG,MAAOQ,EAAMC,OAAOxB,QAEjEkB,EAAgBT,EACjB,IAiCO,sBAAM7B,UAAU,eAAhB,SACE,mBAAGA,UAAU,gBAAgB,cAAY,gBAK/C,qBAAKA,UAAU,cAAf,SACE,sBAAKA,UAAU,iCAAiC,UAAQ,gBAAxD,UACE,qBAAKA,UAAU,aAAf,SACGS,EAAgB8B,KAAI,SAAAM,GAAO,OAC1B,cAAC,EAAD,CAEE,UAAQ,UACR7C,UAAWD,IAAW,cAAgB,CACpC,UAAWsC,EAAgBS,SAASD,KAEtChB,OAAQ,CACNkB,UAAWV,EAAgBS,SAASD,GAChCR,EAAgBW,QAAO,SAAAC,GAAC,OAAIA,IAAMJ,CAAV,IADjB,sBAEHR,GAFG,CAEcQ,KAT7B,SAYGA,GAXIA,EAFmB,MAkB9B,qBAAK7C,UAAU,mBAAf,SACE,cAAC,EAAD,CACE6B,OAAQ,CAAEkB,UAAW,MACrB,UAAQ,aACR/C,UAAWD,IAAW,oBAAqB,CACzC,cAA0C,IAA3BsC,EAAgBa,SAJnC,wBAaN,qBAAKlD,UAAU,cAAf,SACE,cAAC,EAAD,CACE6B,OAAQ,CACNkB,UAAW,KACXZ,MAAO,KACP3B,IAAK,MAEPR,UAAU,0CANZ,mCAaP,EC9GYmD,G,MAAS,kBACpB,qBAAKnD,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,qBAFG,GCQToD,EAA8B,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQrB,EAAX,EAAWA,aAAX,OACzC,cAAC,IAAD,CACE9B,GAAI,CACFoD,SAAS,WAAD,OAAaD,EAAOE,MAC5BtB,OAAQD,EAAajB,YAEvBf,UAAWD,IAAW,CACpB,kBAAkC,MAAfsD,EAAO7C,MAN9B,SASG6C,EAAOG,MAV+B,ECC9BC,EAA6B,SAAC,GAAsB,IAApBJ,EAAmB,EAAnBA,OAAQE,EAAW,EAAXA,KACnD,EAAuBxB,cAAhBC,EAAP,oBAEA,OACE,qBACE,UAAQ,SAERhC,UAAW0D,IAAG,CACZ,yBAA0BH,IAASF,EAAOE,OAJ9C,UAOE,6BACE,cAAC,EAAD,CAAYF,OAAQA,EAAQrB,aAAcA,MAG5C,6BAAKqB,EAAO7C,MACZ,6BAAK6C,EAAOM,OACZ,6BAAKN,EAAOO,OACZ,6BACE,4BACGP,EAAOQ,OACN,cAAC,EAAD,CAAYR,OAAQA,EAAOQ,OAAQ7B,aAAcA,IAE/CqB,EAAOS,YAAc,QAG7B,6BACE,4BACGT,EAAOU,OACN,cAAC,EAAD,CAAYV,OAAQA,EAAOU,OAAQ/B,aAAcA,IAE/CqB,EAAOW,YAAc,UAzBxBX,EAAOE,KA8BjB,ECnCYU,EAA+B,SAAC,GAItC,IAHLC,EAGI,EAHJA,OACAX,EAEI,EAFJA,KACAvB,EACI,EADJA,aAEMmC,EAAcnC,EAAaoC,IAAI,QAC/BC,EAAerC,EAAaoC,IAAI,SAChCE,EAAS,SAACd,GACd,OAAKW,EAIDA,IAAgBX,GAASa,EAItB,CAAEE,KAAM,KAAMC,MAAO,MAHnB,CAAED,KAAMf,EAAMgB,MAAO,QAJrB,CAAED,KAAMf,EAAMgB,MAAO,KAQ/B,EAED,OACE,wBACE,UAAQ,cACRxE,UAAU,uDAFZ,UAIE,gCACE,+BACE,6BACE,uBAAMA,UAAU,8BAAhB,iBAEE,cAAC,EAAD,CACE6B,OAAQyC,EAAO,QADjB,SAGE,sBAAMtE,UAAU,OAAhB,SACE,mBAAGA,UAAW0D,IAAG,cAAe,CAC9B,aAA8B,SAAhBS,IAA2BE,EACzC,eAAiC,SAAjBA,GAA2C,SAAhBF,eAQrD,6BACE,uBAAMnE,UAAU,8BAAhB,gBAEE,cAAC,EAAD,CACE6B,OAAQyC,EAAO,OADjB,SAGE,sBAAMtE,UAAU,OAAhB,SACE,mBAAGA,UAAW0D,IAAG,cAAe,CAC9B,aAA8B,QAAhBS,IAA0BE,EACxC,eAAiC,SAAjBA,GAA2C,QAAhBF,eAQrD,6BACE,uBAAMnE,UAAU,8BAAhB,iBAEE,cAAC,EAAD,CACE6B,OAAQyC,EAAO,QADjB,SAGE,sBAAMtE,UAAU,OAAhB,SACE,mBAAGA,UAAW0D,IAAG,cAAe,CAC9B,aAA8B,SAAhBS,IAA2BE,EACzC,eAAiC,SAAjBA,GAA2C,SAAhBF,eAQrD,6BACE,uBAAMnE,UAAU,8BAAhB,iBAEE,cAAC,EAAD,CACE6B,OAAQyC,EAAO,QADjB,SAGE,sBAAMtE,UAAU,OAAhB,SACE,mBAAGA,UAAW0D,IAAG,cAAe,CAC9B,aAA8B,SAAhBS,IAA2BE,EACzC,eAAiC,SAAjBA,GAA2C,SAAhBF,eAQrD,wCACA,6CAIJ,gCACGD,EAAO3B,KAAI,SAAAc,GAAM,OAChB,cAAC,EAAD,CACEA,OAAQA,EAERE,KAAMA,GADDF,EAAOE,KAHE,QAWzB,ECxHKkB,EAAU,oEAEhB,SAASC,EAAKC,GACZ,OAAO,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASF,EAAxB,GAC3B,CAEM,SAAeI,IAAtB,+B,sDAAO,iHAEEL,EAAK,KACTM,MAAK,kBAAMC,MAAMR,EAAZ,IACLO,MAAK,SAAAE,GAAQ,OAAIA,EAASC,MAAb,KAJX,4C,sBCCA,IAAMC,EAAa,WACxB,MAA4BC,mBAAmB,IAA/C,mBAAOnB,EAAP,KAAeoB,EAAf,KACA,EAAkCD,oBAAS,GAA3C,mBAAOE,EAAP,KAAkBC,EAAlB,KACA,EAA8BH,mBAAS,IAAvC,mBAAOI,EAAP,KAAgBC,EAAhB,KACA,EAAwC3D,cAAxC,mBAAOC,EAAP,KAAqBM,EAArB,KAEMH,EAAQH,EAAaoC,IAAI,UAAY,GACrChC,EAAcJ,EAAaoC,IAAI,QAAU,KACzC/B,EAAkBL,EAAa2D,OAAO,cAAgB,GACtDC,EAAY5D,EAAaoC,IAAI,SAAW,KACxCyB,EAAc7D,EAAaoC,IAAI,UAAY,KACzC0B,EAAeC,cAAfD,WAEJE,EAAc,YAAO9B,GA2EzB,OAzEA+B,qBAAU,WACR,IAAMC,EAAS,iDAAG,yHAEoBnB,IAFpB,OAERoB,EAFQ,OAIRC,EAAmBD,EAAoB5D,KAAI,SAAAc,GAC/C,IAAMQ,EAASsC,EAAoBE,MAAK,SAAAC,GAAC,OAAIA,EAAE9C,OAASH,EAAOS,UAAtB,IACnCC,EAASoC,EAAoBE,MAAK,SAAAC,GAAC,OAAIA,EAAE9C,OAASH,EAAOW,UAAtB,IAEzC,OAAO,2BACFX,GADL,IAEEQ,SACAE,UAEH,IAEDuB,EAAUc,GAfI,gDAiBdV,EAAW,wBAjBG,yBAmBdF,GAAa,GAnBC,4EAAH,qDAuBfU,GACD,GAAE,IAEC9D,IACF4D,EAAiBA,EAAehD,QAAO,SAAAK,GAAM,OAAIA,EAAO7C,MAAQ4B,CAAnB,KAG/C6D,qBAAU,WACR,IAAK9D,EAAO,CACV,IAAMoE,EAAsB7F,EAAcsB,EAAc,CAAEG,MAAO,OAEjEG,EAAgBiE,EACjB,CACF,GAAE,CAACpE,EAAOH,EAAcM,IAErBH,IACF6D,EAAiBA,EAAehD,QAAO,SAAAK,GACrC,OAAOA,EAAOG,KAAKgD,cAAc1D,SAASX,EAAMqE,gBAC1CnD,EAAOS,YAAcT,EAAOS,WAAW0C,cAAc1D,SAASX,EAAMqE,gBACpEnD,EAAOW,YAAcX,EAAOW,WAAWwC,cAAc1D,SAASX,EAAMqE,cAC3E,KAGCnE,EAAgBa,OAAS,IAC3B8C,EAAiBA,EAAehD,QAAO,SAACK,GACtC,IAAMoD,EAAcC,KAAKC,KAAKtD,EAAOM,KAAO,KAE5C,OAAOtB,EAAgBS,SAAS2D,EAAY1F,WAC7C,KAGC6E,IACFI,EAAiBA,EAAezB,MAAK,SAACqC,EAAGC,GACvC,OAAQjB,GACN,IAAK,OAAQ,OAAOgB,EAAEpD,KAAKsD,cAAcD,EAAErD,MAE3C,IAAK,MAAO,OAAOoD,EAAEpG,IAAIsG,cAAcD,EAAErG,KAEzC,IAAK,OAAQ,OAAOoG,EAAEjD,KAAOkD,EAAElD,KAE/B,QAAS,OAAOiD,EAAEhD,KAAOiD,EAAEjD,KAE9B,IAEGiC,GACFG,EAAee,WAKjB,qBAAK/G,UAAU,UAAf,SACE,sBAAKA,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,yBAEA,qBAAKA,UAAU,QAAf,SACE,sBAAKA,UAAU,mDAAf,WACIuF,GACA,qBAAKvF,UAAU,uCAAf,SACE,cAAC,EAAD,CACEmC,MAAOA,EACPC,YAAaA,EACbC,gBAAiBA,MAKvB,qBAAKrC,UAAU,SAAf,SACE,qBAAKA,UAAU,sBAAf,SACGgG,EAAe9C,OAAS,EAErB,cAAC,EAAD,CACEK,KAAMuC,EACN5B,OAAQ8B,EACRhE,aAAcA,IAIhB,qCACGuD,GAAa,cAAC,EAAD,IACbE,GACC,mBAAG,UAAQ,qBAAqBzF,UAAU,kBAA1C,SACGyF,KAGFA,GAA6B,IAAlBvB,EAAOhB,SAAiBqC,GACpC,mBAAG,UAAQ,kBAAX,+CAKyB,IAA1BS,EAAe9C,QACd,yGAWvB,EC5IY8D,EAAO,kBAClB,cAAC,IAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAOC,KAAK,IAAIC,QAAS,cAAC,EAAD,IAAzB,UACE,cAAC,IAAD,CAAOC,OAAK,EAACD,QAAS,cAAC,EAAD,MACtB,cAAC,IAAD,CAAOD,KAAK,OAAOC,QAAS,cAAC,IAAD,CAAUhH,GAAG,IAAIkH,SAAO,MACpD,eAAC,IAAD,CAAOH,KAAK,SAAZ,UACE,cAAC,IAAD,CAAOE,OAAK,EAACD,QAAS,cAAC,EAAD,MACtB,cAAC,IAAD,CAAOD,KAAK,eAAeC,QAAS,cAAC,EAAD,SAGtC,cAAC,IAAD,CAAOD,KAAK,IAAIC,QAAS,cAAC,EAAD,YAXb,ECLdG,EAAYC,SAASC,eAAe,QAE1CC,qBAAWH,GAAWI,OAAO,cAAC,EAAD,I","file":"static/js/main.9425cc0c.chunk.js","sourcesContent":["/* eslint-disable max-len */\nimport classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nexport const Navbar = () => {\n  const isActiveClass = ({ isActive }: { isActive: boolean }) => classNames('navbar-item', {\n    'has-background-grey-lighter': isActive,\n  });\n\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink to=\"/\" className={isActiveClass}>\n            Home\n          </NavLink>\n\n          <NavLink\n            aria-current=\"page\"\n            className={isActiveClass}\n            to=\"/people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { Outlet } from 'react-router-dom';\nimport { Navbar } from './components/Navbar';\n\nimport './App.scss';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <Navbar />\n\n      <Outlet />\n    </div>\n  );\n};\n","export const HomePage = () => {\n  return (\n    <main className=\"section\">\n      <h1 className=\"title\">Home Page</h1>\n    </main>\n  );\n};\n","export const NotFoundPage = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","export const filterSex = [\n  { title: 'All', sex: null },\n  { title: 'Male', sex: 'm' },\n  { title: 'Female', sex: 'f' },\n];\n\nexport const filterCenturies = ['16', '17', '18', '19', '20'];\n","export type SearchParams = {\n  [key: string]: string | string[] | null,\n};\n\n/**\n * This function prepares a correct search string\n * from a given currentParams and paramsToUpdate.\n */\nexport function getSearchWith(\n  currentParams: URLSearchParams,\n  paramsToUpdate: SearchParams, // it's our custom type\n): string {\n  // copy currentParams by creating new object from a string\n  const newParams = new URLSearchParams(\n    currentParams.toString(),\n  );\n\n  // Here is the example of paramsToUpdate\n  // {\n  //   sex: 'm',                ['sex', 'm']\n  //   order: null,             ['order', null]\n  //   centuries: ['16', '19'], ['centuries', ['16', '19']]\n  // }\n  //\n  // - params with the `null` value are deleted;\n  // - string value is set to given param key;\n  // - array of strings adds several params with the same key;\n\n  Object.entries(paramsToUpdate)\n    .forEach(([key, value]) => {\n      if (value === null) {\n        newParams.delete(key);\n      } else if (Array.isArray(value)) {\n        // we delete the key to remove old values\n        newParams.delete(key);\n\n        value.forEach(part => {\n          newParams.append(key, part);\n        });\n      } else {\n        newParams.set(key, value);\n      }\n    });\n\n  // we return a string to use it inside links\n  return newParams.toString();\n}\n","import { Link, LinkProps, useSearchParams } from 'react-router-dom';\nimport { getSearchWith, SearchParams } from '../utils/searchHelper';\n\ntype Props = Omit<LinkProps, 'to'> & {\n  params: SearchParams,\n};\n\nexport const SearchLink: React.FC<Props> = ({\n  children,\n  params,\n  ...props\n}) => {\n  const [searchParams] = useSearchParams();\n\n  return (\n    <Link\n      to={{\n        search: getSearchWith(searchParams, params),\n      }}\n      {...props}\n    >\n      {children}\n    </Link>\n  );\n};\n","import classNames from 'classnames';\nimport React from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { filterCenturies, filterSex } from '../utils/helpers';\nimport { getSearchWith } from '../utils/searchHelper';\nimport { SearchLink } from './SearchLink';\n\ntype Props = {\n  query: string,\n  filterBySex: string | null,\n  centuriesOption: string[],\n};\n\nexport const PeopleFilters: React.FC<Props> = ({\n  query,\n  filterBySex,\n  centuriesOption,\n}) => {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const handleQueryChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const params = getSearchWith(searchParams, { query: event.target.value });\n\n    setSearchParams(params);\n  };\n\n  return (\n    <nav className=\"panel\">\n      <p className=\"panel-heading\">Filters</p>\n\n      <p className=\"panel-tabs\" data-cy=\"SexFilter\">\n        {filterSex.map((\n          { title, sex },\n        ) => (\n          <SearchLink\n            key={title}\n            params={{ sex }}\n            className={classNames({\n              'is-active': filterBySex === sex,\n            })}\n          >\n            {title}\n          </SearchLink>\n        ))}\n      </p>\n\n      <div className=\"panel-block\">\n        <p className=\"control has-icons-left\">\n          <input\n            data-cy=\"NameFilter\"\n            type=\"search\"\n            className=\"input\"\n            placeholder=\"Search\"\n            value={query}\n            onChange={handleQueryChange}\n          />\n\n          <span className=\"icon is-left\">\n            <i className=\"fas fa-search\" aria-hidden=\"true\" />\n          </span>\n        </p>\n      </div>\n\n      <div className=\"panel-block\">\n        <div className=\"level is-flex-grow-1 is-mobile\" data-cy=\"CenturyFilter\">\n          <div className=\"level-left\">\n            {filterCenturies.map(century => (\n              <SearchLink\n                key={century}\n                data-cy=\"century\"\n                className={classNames('button mr-1', ({\n                  'is-info': centuriesOption.includes(century),\n                }))}\n                params={{\n                  centuries: centuriesOption.includes(century)\n                    ? centuriesOption.filter(c => c !== century)\n                    : [...centuriesOption, century],\n                }}\n              >\n                {century}\n              </SearchLink>\n            ))}\n          </div>\n\n          <div className=\"level-right ml-4\">\n            <SearchLink\n              params={{ centuries: null }}\n              data-cy=\"centuryALL\"\n              className={classNames('button is-success', {\n                'is-outlined': centuriesOption.length !== 0,\n              })}\n            >\n              All\n            </SearchLink>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"panel-block\">\n        <SearchLink\n          params={{\n            centuries: null,\n            query: null,\n            sex: null,\n          }}\n          className=\"button is-link is-outlined is-fullwidth\"\n        >\n          Reset all filters\n        </SearchLink>\n      </div>\n    </nav>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../types';\n\ntype Props = {\n  person: Person\n  searchParams: URLSearchParams,\n};\n\nexport const PersonLink: React.FC<Props> = ({ person, searchParams }) => (\n  <Link\n    to={{\n      pathname: `/people/${person.slug}`,\n      search: searchParams.toString(),\n    }}\n    className={classNames({\n      'has-text-danger': person.sex === 'f',\n    })}\n  >\n    {person.name}\n  </Link>\n);\n","import cn from 'classnames';\nimport React from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { Person } from '../types';\nimport { PersonLink } from './PersonLink';\n\ntype Props = {\n  person: Person,\n  slug: string | undefined,\n};\n\nexport const PeopleRow: React.FC<Props> = ({ person, slug }) => {\n  const [searchParams] = useSearchParams();\n\n  return (\n    <tr\n      data-cy=\"person\"\n      key={person.slug}\n      className={cn({\n        'has-background-warning': slug === person.slug,\n      })}\n    >\n      <td>\n        <PersonLink person={person} searchParams={searchParams} />\n      </td>\n\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n      <td>\n        <p>\n          {person.mother ? (\n            <PersonLink person={person.mother} searchParams={searchParams} />\n          )\n            : person.motherName || '-'}\n        </p>\n      </td>\n      <td>\n        <p>\n          {person.father ? (\n            <PersonLink person={person.father} searchParams={searchParams} />\n          )\n            : person.fatherName || '-'}\n        </p>\n      </td>\n    </tr>\n  );\n};\n","/* eslint-disable max-len */\nimport cn from 'classnames';\nimport { Person } from '../types';\nimport { PeopleRow } from './PeopleRow';\nimport { SearchLink } from './SearchLink';\n\ntype Props = {\n  people: Person[];\n  slug: string | undefined;\n  searchParams: URLSearchParams;\n};\n\nexport const PeopleTable: React.FC<Props> = ({\n  people,\n  slug,\n  searchParams,\n}) => {\n  const currentSort = searchParams.get('sort');\n  const currentOrder = searchParams.get('order');\n  const sortBy = (name: string) => {\n    if (!currentSort) {\n      return { sort: name, order: null };\n    }\n\n    if (currentSort === name && !currentOrder) {\n      return { sort: name, order: 'desc' };\n    }\n\n    return { sort: null, order: null };\n  };\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Name\n              <SearchLink\n                params={sortBy('name')}\n              >\n                <span className=\"icon\">\n                  <i className={cn('fas fa-sort', {\n                    'fa-sort-up': currentSort === 'name' && !currentOrder,\n                    'fa-sort-down': currentOrder === 'desc' && currentSort === 'name',\n                  })}\n                  />\n                </span>\n              </SearchLink>\n            </span>\n          </th>\n\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Sex\n              <SearchLink\n                params={sortBy('sex')}\n              >\n                <span className=\"icon\">\n                  <i className={cn('fas fa-sort', {\n                    'fa-sort-up': currentSort === 'sex' && !currentOrder,\n                    'fa-sort-down': currentOrder === 'desc' && currentSort === 'sex',\n                  })}\n                  />\n                </span>\n              </SearchLink>\n            </span>\n          </th>\n\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Born\n              <SearchLink\n                params={sortBy('born')}\n              >\n                <span className=\"icon\">\n                  <i className={cn('fas fa-sort', {\n                    'fa-sort-up': currentSort === 'born' && !currentOrder,\n                    'fa-sort-down': currentOrder === 'desc' && currentSort === 'born',\n                  })}\n                  />\n                </span>\n              </SearchLink>\n            </span>\n          </th>\n\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Died\n              <SearchLink\n                params={sortBy('died')}\n              >\n                <span className=\"icon\">\n                  <i className={cn('fas fa-sort', {\n                    'fa-sort-up': currentSort === 'died' && !currentOrder,\n                    'fa-sort-down': currentOrder === 'desc' && currentSort === 'died',\n                  })}\n                  />\n                </span>\n              </SearchLink>\n            </span>\n          </th>\n\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <PeopleRow\n            person={person}\n            key={person.slug}\n            slug={slug}\n          />\n        ))}\n\n      </tbody>\n    </table>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport async function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","/* eslint-disable max-len */\nimport { useEffect, useState } from 'react';\nimport { useParams, useSearchParams } from 'react-router-dom';\nimport { PeopleFilters } from './PeopleFilters';\nimport { Loader } from './Loader';\nimport { PeopleTable } from './PeopleTable';\nimport { Person } from '../types';\nimport { getPeople } from '../api';\nimport { getSearchWith } from '../utils/searchHelper';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isError, setIsError] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const query = searchParams.get('query') || '';\n  const filterBySex = searchParams.get('sex') || null;\n  const centuriesOption = searchParams.getAll('centuries') || [];\n  const sortByUrl = searchParams.get('sort') || null;\n  const sortByOrder = searchParams.get('order') || null;\n  const { personSlug } = useParams();\n\n  let filteredPeople = [...people];\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const getPeopleFromServer = await getPeople();\n\n        const peopleFromServer = getPeopleFromServer.map(person => {\n          const mother = getPeopleFromServer.find(p => p.name === person.motherName);\n          const father = getPeopleFromServer.find(p => p.name === person.fatherName);\n\n          return {\n            ...person,\n            mother,\n            father,\n          };\n        });\n\n        setPeople(peopleFromServer);\n      } catch {\n        setIsError('Something went wrong');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  if (filterBySex) {\n    filteredPeople = filteredPeople.filter(person => person.sex === filterBySex);\n  }\n\n  useEffect(() => {\n    if (!query) {\n      const updatedSearchParams = getSearchWith(searchParams, { query: null });\n\n      setSearchParams(updatedSearchParams);\n    }\n  }, [query, searchParams, setSearchParams]);\n\n  if (query) {\n    filteredPeople = filteredPeople.filter(person => {\n      return person.name.toLowerCase().includes(query.toLowerCase())\n        || (person.motherName && person.motherName.toLowerCase().includes(query.toLowerCase()))\n        || (person.fatherName && person.fatherName.toLowerCase().includes(query.toLowerCase()));\n    });\n  }\n\n  if (centuriesOption.length > 0) {\n    filteredPeople = filteredPeople.filter((person) => {\n      const alivePeriod = Math.ceil(person.born / 100);\n\n      return centuriesOption.includes(alivePeriod.toString());\n    });\n  }\n\n  if (sortByUrl) {\n    filteredPeople = filteredPeople.sort((a, b) => {\n      switch (sortByUrl) {\n        case 'name': return a.name.localeCompare(b.name);\n\n        case 'sex': return a.sex.localeCompare(b.sex);\n\n        case 'born': return a.born - b.born;\n\n        default: return a.died - b.died;\n      }\n    });\n\n    if (sortByOrder) {\n      filteredPeople.reverse();\n    }\n  }\n\n  return (\n    <div className=\"section\">\n      <div className=\"container\">\n        <h1 className=\"title\">People Page</h1>\n\n        <div className=\"block\">\n          <div className=\"columns is-desktop is-flex-direction-row-reverse\">\n            {!isLoading && (\n              <div className=\"column is-7-tablet is-narrow-desktop\">\n                <PeopleFilters\n                  query={query}\n                  filterBySex={filterBySex}\n                  centuriesOption={centuriesOption}\n                />\n              </div>\n            )}\n\n            <div className=\"column\">\n              <div className=\"box table-container\">\n                {filteredPeople.length > 0\n                  ? (\n                    <PeopleTable\n                      slug={personSlug}\n                      people={filteredPeople}\n                      searchParams={searchParams}\n                    />\n                  )\n                  : (\n                    <>\n                      {isLoading && <Loader />}\n                      {isError && (\n                        <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                          {isError}\n                        </p>\n                      )}\n                      {(!isError && people.length === 0 && !isLoading) && (\n                        <p data-cy=\"noPeopleMessage\">\n                          There are no people on the server\n                        </p>\n\n                      )}\n                      {filteredPeople.length === 0 && (\n                        <p>There are no people matching the current search criteria</p>\n                      )}\n                    </>\n                  )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import {\n  Routes,\n  Route,\n  HashRouter as Router,\n  Navigate,\n} from 'react-router-dom';\nimport { App } from './App';\nimport { HomePage } from './components/HomePage';\nimport { NotFoundPage } from './components/NotFoundPage';\nimport { PeoplePage } from './components/PeoplePage';\n\nexport const Root = () => (\n  <Router>\n    <Routes>\n      <Route path=\"/\" element={<App />}>\n        <Route index element={<HomePage />} />\n        <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n        <Route path=\"people\">\n          <Route index element={<PeoplePage />} />\n          <Route path=\":personSlug?\" element={<PeoplePage />} />\n        </Route>\n\n        <Route path=\"*\" element={<NotFoundPage />} />\n      </Route>\n    </Routes>\n  </Router>\n);\n","import { createRoot } from 'react-dom/client';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { Root } from './Root';\n\nconst container = document.getElementById('root') as HTMLElement;\n\ncreateRoot(container).render(<Root />);\n"],"sourceRoot":""}